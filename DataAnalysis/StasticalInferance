###########################################################################
The sample variance estimates population variance.
The distribution of the sample variance is centered at the population variance.
The sample variance gets more concentrated around the population variance with 
larger sample sizes
The variance of the sample mean is the population variance divided by n.
The standard error of the sample mean is the sample standard deviation s divided 
by sqrt(n).

Common distributions are Bernoulli - binary trials, the Gaussian, it
forms a bell shaped curve, symmetric about its mean mu and the  the Poisson 
distribution models counts or number of event in some interval of time.

###########################################################################

###########################################################################
| The sample standard deviation, s, tells us how variable the population
| is, and s/sqrt(n), the standard error, tells us how much averages of
| random samples of size n from the population vary:

###########################################################################

The standard deviation of a statistic is called its standard error, so
the standard error of the sample mean is the square root of its
variance.

 Var(X')
 =Var(1/n*Sum(X_i))
 =(1/n^2)*Var(Sum(X_i))
 =(1/n^2)*Sum(sigma^2)
 =sigma^2/n
 
for infinite populations when our samples are independent.

##its square root, s / sqrt(n), is the standard error of the sample mean.

###############NORMAL############################################################

> sd(apply(matrix(rnorm(10000),1000),1,mean))
[1] 0.3059331

1/sqrt(10) to see if it matches the standard
| deviation we just computed with our simulation.
> 1/sqrt(10)
[1] 0.3162278

| This returns the standard deviation of 1000 averages, each of a sample
| of 10 random normal numbers with mean 0 and standard deviation 1. The
| theory tells us that the standard error, s/sqrt(n), of the sample means
| indicates how much averages of random samples of size n (in this case
| 10) vary.

############POISSON##############################################################

> sd(apply(matrix(runif(10000),1000),1,mean))
[1] 0.09286037

>  1/sqrt(120)
[1] 0.09128709

Standard uniform
| distributions have variance 1/12. The theory tells us the standard
| error of means of independent samples of size n would have which
| standard errorof 1/sqrt(12*n). Poisson(4) are distributions with variance
| 4; with standard error would means of random samples of n Poisson(4)
| of 2/sqrt(n)

##assume you're
| taking averages of 10 Poisson(4) samples and compute the standard error
| of these means. 

> 2/sqrt(10)
[1] 0.6324555

> sd(apply(matrix(rpois(10000,4),1000),1,mean))
[1] 0.6324055

###########################################################################

 Fair coin flips have variance 0.25;
| means of random samples of n coin flips have what standard error of 
1/(2*sqrt(n)). 

> 1/(2*sqrt(10))
[1] 0.1581139
> sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
[1] 0.1611111

taking averages of 10 coin flips and
| compute the standard error of these means

## Chebyshev's inequality###############################################"
helps
| interpret variances. It states that the probability that a random
| variable X is at least k standard deviations from its mean is less than
| 1/(k^2). In other words, the probability that X is at least 2 standard
| deviations from the mean is less than 1/4, 3 standard deviations 1/9, 4
| standard deviations 1/16, etc.

| However this estimate is quite conservative for random variables that
##| are normally distributed, that is, with bell-curve distributions. In
| these cases, the probability of being at least 2 standard deviations
| from the mean is about 5% (as compared to Chebyshev's upper bound of
| 25%) and the probability of being at least 3 standard deviations from
| the mean is roughly .2%.


######################################################################
 the Bernoulli is associated with experiments which have only 2 possible 
 outcomes. These are also called (by people in the know) binary trials.
#####################################################################

say that Bernoulli random variables take
| only the values 1 and 0. Suppose we also specify that the probability
| that the Bernoulli outcome of 1 is p. The following represents
| the probability of a 0 outcome: 
 1-p
 
 If the probability of a 1 is p and the probability of a 0 is 1-p 
 p^x *(1-p)^(1-x)
represents the PMF of a Bernoulli distribution? 
Recall
| that the PMF is the function representing the probability that X=x.

Suppose
| we have a Bernoulli random variable and, as before, the probability it
| equals 1 (a success) is p and probability it equals 0 (a failure) is
| 1-p. 

Its mean is p. 

| Given the same Bernoulli random variable above, p represents E(X^2)

So we can use the answers of the last two questions to find the variance of the
| Bernoulli random variable. 

Recall Var = E(X^2)-(E(X))^2
=  p(1-p)

| Binomial random variables are obtained as the sum of iid Bernoulli
| trials.  Specifically, let X_1, ..., X_n be iid Bernoulli(p) random
| variables; then X = X_1 + X_2 + ... X_n is a binomial random variable.
| Binomial random variables represent the number of successes, k, out of
| n independent Bernoulli trials. Each of the trials has probability p.

####### PMF of a a binomial random variable X ########################## 

| The PMF of a binomial random variable X is the function representing
| the probability that X=x. In other words, that there are x successes
| out of n independent trials. 

choose(n,x) * p^x * (1-p)^(n-x) represents the PMF
| of a binomial distribution? Here x, the number of successes, goes from
| 0 to n, the number of trials, and choose(n,x) represents the binomial
| coefficient 'n choose x' which is the number of ways x successes out of
| n trials can occur regardless of order.

 Suppose we were going to flip a biased coin 5 times. The probability of
| tossing a head is .8 and a tail .2. What is the probability that you'll
| toss at least 3 heads.

 add together 3 terms each of the form, choose(5,x)*(.8)^x*(.2)^(5-x) for x=3,4,5 
 
 > sum((choose(5,3)*(.8)^3*(.2)^(5-3))
 +(choose(5,4)*(.8)^4*(.2)^(5-4))
 +(choose(5,5)*(.8)^5*(.2)^(5-5))
 )
[1] 0.94208

> pbinom(2,size=5,prob=.8,lower.tail=FALSE)
[1] 0.94208

Now you can verify your answer with the R function pbinom. The quantile
| is 2, the size is 5, the prob is .8 and the lower.tail is FALSE.

##########################################################################
| Another very common distribution is the normal or Gaussian. It has a
| complicated density function involving its mean mu and variance
| sigma^2. The key fact of the density formula is that when plotted, it
| forms a bell shaped curve, symmetric about its mean mu. The variance
| sigma^2 corresponds to the width of the bell, the higher the variance,
| the fatter the bell. We denote a normally distributed random variable X
| as X ~ N(mu, sigma^2).
############################################################################

| When mu = 0 and sigma = 1 the resulting distribution is called the
| standard normal distribution and it is often labeled Z.

| Approximately 68%, 95% and 99% of the normal density lie within 1, 2
| and 3 standard deviations from the mean, respectively. These are shown
| in the three shaded areas of the figure. For example, the darkest
| portion (between -1 and 1) represents 68% of the area.

 The 10th percentile of the standard normal, is:
 > qnorm(.10)
[1] -1.281552

| We can use the symmetry of the bell curve to determine other quantiles.
| Given that 2.5% of the area under the curve falls to the left of
| x=-1.96, the 97.5 percentile for the standard normal is 1.96.

## If X is a
| normal random variable with mean mu and variance sigma^2, i.e., 
X ~ N(mu,sigma^2)

The converse is also true. If Z is standard normal, i.e., Z ~ N(0,1),
then  the random variable X defined as  X = mu + sigma*Z is normally
distributed with 
mean mu and variance sigma^2, i.e., 
X ~ N(mu, sigma^2) 

| These formulae allow you to easily compute quantiles (and thus
| percentiles) for ANY normally distributed variable if you know its mean
| and variance. We'll show how to find the 97.5th percentile of a normal
| distribution with mean 3 and variance 4.

> qnorm(.975,mean=3,sd=2)
[1] 6.919928

> 1.96*2 + 3
[1] 6.92
 
 ## R functions pnorm and qnorm are inverses
qnorm(pnorm(.53))= pnorm(qnorm(.53))=.53

Used R's qnorm function and simply specify the mean and
| standard deviation (the square root of the variance). Do this now. Find
| the 97.5th percentile of a normal distribution with mean 3 and standard
| deviation 2.
check it using the formula above, X = mu + sigma*Z.

########################################################################

| Suppose you have a normal distribution with mean 1020 and standard
| deviation of 50 and you want to compute the probability that the
| associated random variable X > 1200. The easiest way to do this is to
| use R's pnorm function in which you specify the quantile (1200), the
| mean (1020) and standard deviation (50). You also must specify that the
| lower.tail is FALSE since we're asking for a probability that the
| random variable is greater than our quantile. Do this now.

> pnorm(1200,mean=1020,sd=50,lower.tail=FALSE)
[1] 0.0001591086

| Alternatively, we could use the formula above to transform the given
| distribution to a standard normal. We compute the number of standard
| deviations the specified number (1200) is from the mean with Z = (X
| -mu)/sigma. This is our new quantile. We can then use the standard
| normal distribution and the default values of pnorm. Remember to
| specify that lower.tail is FALSE.  Do this now.

> pnorm((1200-1020)/50,lower.tail=FALSE)
[1] 0.0001591086


the 75% percentile: 
> qnorm(.75,mean=1020,sd=50)
[1] 1053.724


#######################################################################
| Now let's talk about our last common distribution, the Poisson. This
| is, as Wikipedia tells us, "a discrete probability distribution that
| expresses the probability of a given number of events occurring in a
| fixed interval of time and/or space if these events occur with a known
| average rate and independently of the time since the last event."
#######################################################################

| In other words, the Poisson distribution models counts or number of
| event in some interval of time. From Wikipedia, "Any variable that is
| Poisson distributed only takes on integer values."

| The PMF of the Poisson distribution has one parameter, lambda. As with
| the other distributions the PMF calculates the probability that the
| Poisson distributed random variable X takes the value x. Specifically,
| P(X=x)=(lambda^x)e^(-lambda)/x!. Here x ranges from 0 to infinity.
| The mean and variance of the Poisson distribution are both lambda.

| Poisson random variables are used to model rates such as the rate of
| hard drive failures. We write X~Poisson(lambda*t) where lambda is the
| expected count per unit of time and t is the total monitoring time.

| For example, suppose the number of people that show up at a bus stop is
| Poisson with a mean of 2.5 per hour, and we want to know the
| probability that at most 3 people show up in a 4 hour period. We use
| the R function ppois which returns a probability that the random
| variable is less than or equal to 3. We only need to specify the
| quantile (3) and the mean (2.5 * 4). We can use the default parameters,
| lower.tail=TRUE and log.p=FALSE. Try it now.

> ppois(3,2.5 * 4)
[1] 0.01033605

| Finally, the Poisson distribution approximates the binomial
| distribution in certain cases. Recall that the binomial distribution is
| the discrete distribution of the number of successes, k, out of n
| independent binary trials, each with probability p. If n is large and p
| is small then the Poisson distribution with lambda equal to n*p is a
| good approximation to the binomial distribution.

| To see this, use the R function pbinom to estimate the probability that
| you'll see at most 5 successes out of 1000 trials each of which has
| probability .01. As before, you can use the default parameter values
| (lower.tail=TRUE and log.p=FALSE) and just specify the quantile, size,
| and probability.

> pbinom(5,1000,.01)
[1] 0.06613951

| Now use the function ppois with quantile equal to 5 and lambda equal to
| n*p to see if you get a similar result.

> ppois(5,1000*.01)
[1] 0.06708596

This worked because n was
| large (1000) and p was small (.01).





